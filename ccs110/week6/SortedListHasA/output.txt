Adding zero
Adding one
Adding two
Adding three
Adding four
Adding five
The sorted list contains 
five four three two one zero 

Copy of list: The sorted list contains 
five four three two one zero 

The copied list: The sorted list contains 
five four three two one zero 

Testing the Link-Based Sorted List:

Test isEmpty with an empty list:
OK
List should contain
Brent, Donna, Jerry, Luke, Sue, Tom

List actually contains:
The sorted list contains 
Jerry Sue Tom Donna Brent Luke 



Test getPosition:

Brent is at position 1
Donna is at position 1
Jerry is at position 1
Luke is at position 1
Sue is at position 1
Tom is at position 1
Missy belongs at position 1
Zeke belongs at position 1
Aaron belongs at position 1

Test getLength and getEntry:


List has 6 entries, as follows:

1: Jerry
2: Sue
3: Tom
4: Donna
5: Brent
6: Luke

Test remove:


Removing first item (Brent): 1; should be 1 (true)

After removing Brent, list contains 5 items, as follows:
The sorted list contains 
Sue Tom Donna Brent Luke 


Removing interior item (Luke): 1; should be 1 (true)

After removing Luke, list contains 4 items, as follows:
The sorted list contains 
Tom Donna Brent Luke 


Removing last item (Tom): 1; should be 1 (true)

After removing last item, list contains 3 items, as follows:
The sorted list contains 
Donna Brent Luke 


Removing a missing item (Brent): 1; should be 0 (false)

Removing a missing item (Luke): 1; should be 0 (false)

Removing a missing item (Tom): 1; should be 0 (false)

The list contains 0 items, as follows:
The sorted list contains 



Test clear():


The list is empty after invoking clear().
======================================

Testing the List Operations:
The sorted list contains 
Jerry Sue Tom Donna Brent Luke 

isEmpty: returns 0; should be 0 (false)
getLength returns : 6; should be 6
remove(2): returns 1; should be 1 (true)
remove(1): returns 1; should be 1 (true)
remove(6): returns 0; should be 0 (false)
The sorted list contains 
Tom Donna Brent Luke 

getLength returns : 4; should be 4
clear: 
isEmpty: returns 1; should be 1 (true)
Attempt an illegal retrieval from position 6: 
Precondition Violated Exception: getEntry() called with an empty list or invalid position.
